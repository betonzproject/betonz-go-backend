// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: turnover_target.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const hasActivePromotionByUserId = `-- name: HasActivePromotionByUserId :one
SELECT
	EXISTS (
		SELECT
			id, "userId", "productCode", target, "promoCode", "transactionRequestId", "createdAt", "updatedAt"
		FROM
			"TurnoverTarget"
		WHERE
			"userId" = $1
			AND "promoCode" = $2
			AND (
				$3::int IS NULL
				OR "productCode" = $3
			)
	)
`

type HasActivePromotionByUserIdParams struct {
	UserId      pgtype.UUID       `json:"userId"`
	PromoCode   NullPromotionType `json:"promoCode"`
	ProductCode pgtype.Int4       `json:"productCode"`
}

func (q *Queries) HasActivePromotionByUserId(ctx context.Context, arg HasActivePromotionByUserIdParams) (bool, error) {
	row := q.db.QueryRow(ctx, hasActivePromotionByUserId, arg.UserId, arg.PromoCode, arg.ProductCode)
	var exists bool
	err := row.Scan(&exists)
	return exists, err
}
